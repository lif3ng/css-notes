(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{401:function(a,e,s){"use strict";s.r(e);var t=s(42),r=Object(t.a)({},(function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"css-shapes-布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-shapes-布局"}},[a._v("#")]),a._v(" CSS Shapes 布局")]),a._v(" "),s("p",[a._v("CSS Shapes 需要和 float 搭配使用，以实现不规则图文环绕效果。")]),a._v(" "),s("h2",{attrs:{id:"shape-outside"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shape-outside"}},[a._v("#")]),a._v(" shape-outside")]),a._v(" "),s("p",[a._v("支持的属性值分为 4 类：")]),a._v(" "),s("ul",[s("li",[a._v("none")]),a._v(" "),s("li",[s("code",[a._v("<shape-box>")])]),a._v(" "),s("li",[s("code",[a._v("<basic-shape>")])]),a._v(" "),s("li",[s("code",[a._v("<image>")])])]),a._v(" "),s("h3",{attrs:{id:"shape-box"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shape-box"}},[a._v("#")]),a._v(" "),s("code",[a._v("<shape-box>")])]),a._v(" "),s("p",[a._v("指定文字环绕时依照盒子的哪个边缘来计算，取值为 4 中基本盒模型："),s("code",[a._v("margin-box")]),a._v(", "),s("code",[a._v("border-box")]),a._v(", "),s("code",[a._v("padding-box")]),a._v(", "),s("code",[a._v("content-box")]),a._v(".\n"),s("Demo",{attrs:{name:"shape-box"}})],1),a._v(" "),s("h3",{attrs:{id:"basic-shape"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#basic-shape"}},[a._v("#")]),a._v(" "),s("code",[a._v("<basic-shape>")])]),a._v(" "),s("p",[a._v("基本图形函数，包括：")]),a._v(" "),s("ul",[s("li",[a._v("circle() 圆")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("circle( [<shape-radius>]? [at <position>]? )\n")])])]),s("ul",[s("li",[a._v("ellipse() 椭圆")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("ellipse( [<shape-radius>{2}]? [at <position>]? )\n")])])]),s("p",[a._v("半径分别为水平半径和垂直半径， 除了长度还支持 "),s("code",[a._v("farthest-side")]),a._v(", "),s("code",[a._v("closest-side")]),a._v(" 两个关键字，代表距离浮动元素边缘的最长和最短距离，和 at 的具体位置相关。")]),a._v(" "),s("ul",[s("li",[a._v("inset() 内矩形")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("inset( <shape-arg>{1,4} [round <border-radius>]? )\n")])])]),s("p",[a._v("四个值上右下左，可指定具体半径大小圆角")]),a._v(" "),s("ul",[s("li",[a._v("polygon() 多边形")])]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("polygon( [<fill-rule>,]? [<shape-arg> <shape-arg>]# )\n")])])]),s("p",[s("code",[a._v("<fill-rule>")]),a._v("可选值为 nonzero 和 evenodd. 后面为多个点坐标 "),s("code",[a._v("x1 y1, x2 y2, ...")]),a._v(".")]),a._v(" "),s("p",[a._v("下面的 demo 需要通过浏览器 devtools 查看形状区域。")]),a._v(" "),s("Demo",{attrs:{name:"shape"}}),a._v(" "),s("h3",{attrs:{id:"image-todo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#image-todo"}},[a._v("#")]),a._v(" "),s("code",[a._v("<image>")]),a._v(" todo")]),a._v(" "),s("h2",{attrs:{id:"shape-margin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shape-margin"}},[a._v("#")]),a._v(" shape-margin")]),a._v(" "),s("p",[a._v("属性值只有一个长度值。从 0 到浮动元素边界。\n"),s("Demo",{attrs:{name:"margin"}})],1),a._v(" "),s("h2",{attrs:{id:"shape-image-threshold"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shape-image-threshold"}},[a._v("#")]),a._v(" shape-image-threshold")]),a._v(" "),s("p",[a._v("指文字环绕时目标图像的半透明阈值，默认为 0，即完全不透明才环绕。")]),a._v(" "),s("Demo",{attrs:{name:"threshold"}})],1)}),[],!1,null,null,null);e.default=r.exports}}]);